<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaTN" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="3.5.4_0_r8496:8556M" segtype="sentence" srclang="EN-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="EN-US">
        <seg>!</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20150905T115040Z" creationid="explorer" creationdate="20150905T115040Z">
        <seg>!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>";</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T162051Z">
        <seg>";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># "Access denied to keep/break this Promise; already vowed"</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204205Z" creationid="ramiroencinas" creationdate="20160520T204205Z">
        <seg># "Access denied to keep/break this Promise; already vowed"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># ...</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110608T173101Z">
        <seg># ...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Done.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T103340Z" creationid="ramiroencinas" creationdate="20160521T103340Z">
        <seg># Realizado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># OR</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20150714T133100Z" creationid="explorer" creationdate="20150714T133100Z">
        <seg># o</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Output:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T103311Z" creationid="ramiroencinas" creationdate="20160521T103311Z">
        <seg># Salida:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Output: foo bar</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T103326Z" creationid="ramiroencinas" creationdate="20160521T103326Z">
        <seg># Salida: foo bar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Output: this line has foo</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T172942Z" creationid="ramiroencinas" creationdate="20160523T172942Z">
        <seg># Salida: esta línea tiene foo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Perl 5</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20160428T175816Z" creationid="explorer" creationdate="20160428T175816Z">
        <seg># Perl 5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Starting...</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T103320Z" creationid="ramiroencinas" creationdate="20160521T103320Z">
        <seg># Iniciando...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Will throw an exception</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160506T165326Z" creationid="ramiroencinas" creationdate="20160506T165326Z">
        <seg># Lanzará una excepción</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># or</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20120526T212316Z">
        <seg># o</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># same as</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20140801T145152Z" creationid="explorer" creationdate="20140801T145152Z">
        <seg># es lo mismo que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#!/usr/bin/perl -s</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110718T233947Z">
        <seg>#!/usr/bin/perl -s</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#...</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>#...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$!</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T161308Z">
        <seg>$!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$a = 1;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110628T184404Z">
        <seg>$a = 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$a++;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T080236Z">
        <seg>$a++;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$c.close;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T100635Z" creationid="ramiroencinas" creationdate="20160521T100635Z">
        <seg>$c.close;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$c.send($r);</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T100632Z" creationid="ramiroencinas" creationdate="20160521T100632Z">
        <seg>$c.send($r);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$cancellation.cancel;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160527T183740Z" creationid="ramiroencinas" creationdate="20160527T183740Z">
        <seg>$cancelación.cancel;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$channel.close;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T205441Z" creationid="ramiroencinas" creationdate="20160520T205441Z">
        <seg>$canal.close;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$channel.send($r);</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T205434Z" creationid="ramiroencinas" creationdate="20160520T205434Z">
        <seg>$canal.send($r);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$channel.send('Channel One');</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204344Z" creationid="ramiroencinas" creationdate="20160520T204233Z">
        <seg>$canal.send('Canal Uno');</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$even_supply.tap(-&gt; $v { say "Even : $v" });</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="Ram" changedate="20160508T172416Z" creationid="Ram" creationdate="20160508T172416Z">
        <seg>$suministro_par.tap(-&gt; $v { say "Par : $v" });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$half_supply.tap(-&gt; $v { say "Half : $v" });</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160519T184046Z" creationid="ramiroencinas" creationdate="20160519T184046Z">
        <seg>$medio_suministro.tap(-&gt; $v { say "La mitad : $v" });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$i</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T203948Z" creationid="ramiroencinas" creationdate="20160520T203948Z">
        <seg>$i</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$i += $_</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T203945Z" creationid="ramiroencinas" creationdate="20160520T203945Z">
        <seg>$i += $_</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$i -= $_</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204135Z" creationid="ramiroencinas" creationdate="20160520T204135Z">
        <seg>$i -= $_</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$i++;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T092803Z">
        <seg>$i++;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$odd_supply.tap(-&gt; $v { say "Odd : $v" });</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="Ram" changedate="20160508T172337Z" creationid="Ram" creationdate="20160508T172337Z">
        <seg>$suministro_impar.tap(-&gt; $v { say "Impar : $v" });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$proc.close-stdin;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T172927Z" creationid="ramiroencinas" creationdate="20160523T172927Z">
        <seg>$proc.close-stdin;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$proc.say("this line has foo");</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T172912Z" creationid="ramiroencinas" creationdate="20160523T172912Z">
        <seg>$proc.say("esta línea tiene foo");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$proc.say("this one doesn't");</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T172921Z" creationid="ramiroencinas" creationdate="20160523T172921Z">
        <seg>$proc.say("esta no");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$proc.stderr.tap(-&gt; $v { print "Error:  $v" });</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T103246Z" creationid="ramiroencinas" creationdate="20160521T103246Z">
        <seg>$proc.stderr.tap(-&gt; $v { print "Error:  $v" });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$proc.stdout.tap(-&gt; $v { print "Output: $v" });</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T103240Z" creationid="ramiroencinas" creationdate="20160521T103240Z">
        <seg>$proc.stdout.tap(-&gt; $v { print "Salida: $v" });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$promise.keep;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160506T165451Z" creationid="ramiroencinas" creationdate="20160506T165451Z">
        <seg>$promesa.keep;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$promise1.break("First Result");</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T170636Z" creationid="ramiroencinas" creationdate="20160502T170636Z">
        <seg>$promesa1.break("Primer Resultado");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$promise1.keep("First Result");</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160429T202832Z" creationid="ramiroencinas" creationdate="20160429T202832Z">
        <seg>$promesa1.keep("Primer Resultado");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$promise;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160506T165305Z" creationid="ramiroencinas" creationdate="20160506T165305Z">
        <seg>$promesa;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$supplier.done;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T102129Z" creationid="ramiroencinas" creationdate="20160521T102129Z">
        <seg>$proveedor.done;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$supplier.emit("OK");</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T161315Z" creationid="ramiroencinas" creationdate="20160507T161315Z">
        <seg>$proveedor.emit("OK");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$supplier.emit("Won't trigger the tap");</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T161434Z" creationid="ramiroencinas" creationdate="20160507T161434Z">
        <seg>$proveedor.emit("¡No llegará al tap!");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$supplier.emit($_);</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T160016Z" creationid="ramiroencinas" creationdate="20160507T160016Z">
        <seg>$proveedor.emit($_);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$supplier.emit($r);</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T102122Z" creationid="ramiroencinas" creationdate="20160521T102122Z">
        <seg>$proveedor.emit($r);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$supply.tap( -&gt; $v { say "First : $v" });</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T161006Z" creationid="ramiroencinas" creationdate="20160507T161006Z">
        <seg>$suministro.tap( -&gt; $v { say "Primero : $v" });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$supply.tap( -&gt; $v { say "Second : $v" });</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T161020Z" creationid="ramiroencinas" creationdate="20160507T161020Z">
        <seg>$suministro.tap( -&gt; $v { say "Segundo : $v" });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$supply.tap( -&gt; $v { say $v });</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T160006Z" creationid="ramiroencinas" creationdate="20160507T160006Z">
        <seg>$suministro.tap( -&gt; $v { say $v });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$supply.tap(-&gt; $v { say "First $v" });</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T164020Z" creationid="ramiroencinas" creationdate="20160507T164020Z">
        <seg>$suministro.tap(-&gt; $v { say "Primero $v" });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$supply.tap(-&gt; $v { say "Original : $v" });</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="Ram" changedate="20160508T172244Z" creationid="Ram" creationdate="20160508T172244Z">
        <seg>$suministro.tap(-&gt; $v { say "Original : $v" });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$supply.tap(-&gt; $v { say "Second $v"});</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T164038Z" creationid="ramiroencinas" creationdate="20160507T164038Z">
        <seg>$suministro.tap(-&gt; $v { say "Segundo $v"});</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$supply.tap(-&gt; $v { say $v });</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T162957Z" creationid="ramiroencinas" creationdate="20160507T162957Z">
        <seg>$suministro.tap(-&gt; $v { say $v });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$supply.tap: { ... },</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T212035Z" creationid="ramiroencinas" creationdate="20160520T212035Z">
        <seg>$suministro.tap: { ... },</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$tap.close;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204210Z" creationid="ramiroencinas" creationdate="20160520T204210Z">
        <seg>$tap.close;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$thread.finish;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T175338Z" creationid="ramiroencinas" creationdate="20160523T175338Z">
        <seg>$hilo.finish;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$thread.run;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T174819Z" creationid="ramiroencinas" creationdate="20160523T174819Z">
        <seg>$hilo.run;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>)</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T200612Z">
        <seg>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>),</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T173510Z">
        <seg>),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>);</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110608T171424Z">
        <seg>);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>-&gt; $v { say $v.result; "Second Result"}</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160429T202839Z" creationid="ramiroencinas" creationdate="20160429T202812Z">
        <seg>-&gt; $v { say $v.result; "Segundo Resultado"}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T180358Z">
        <seg>.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>..</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110608T190054Z">
        <seg>..</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>...</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110608T172439Z">
        <seg>...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>...; # your usual supply tap code here</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T213352Z" creationid="ramiroencinas" creationdate="20160520T213352Z">
        <seg>...; # el código del tap del suministro</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>0</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110717T233445Z">
        <seg>0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110717T232009Z">
        <seg>1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1 2 3</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T174935Z">
        <seg>1 2 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10  -&gt; $v { say $v }});</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T174813Z" creationid="ramiroencinas" creationdate="20160523T174813Z">
        <seg>10  -&gt; $v { say $v }});</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10 {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T203942Z" creationid="ramiroencinas" creationdate="20160520T203942Z">
        <seg>10 {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10 { $i += $_ }; $i}</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T203934Z" creationid="ramiroencinas" creationdate="20160520T203934Z">
        <seg>10 { $i += $_ }; $i}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12345</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110608T171347Z">
        <seg>12345</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110608T193816Z">
        <seg>1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110717T232034Z">
        <seg>2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>3</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T170504Z">
        <seg>3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>42</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T175616Z">
        <seg>42</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>5</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110717T232037Z">
        <seg>5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>5 :</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204215Z" creationid="ramiroencinas" creationdate="20160520T204215Z">
        <seg>5 :</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:)</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110627T122552Z">
        <seg>:)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:-)</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20140729T012009Z">
        <seg>:-) </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110608T172806Z">
        <seg>;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=SUBTITLE Concurrency and Asynchronous Programming</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ram" changedate="20160429T175756Z" creationid="ram" creationdate="20160429T175756Z">
        <seg>=SUBTITLE Concurrencia y Programación Asíncrona</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=SUBTITLE Perl 5 to Perl 6, in a nutshell: How do I do what I used to do?</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20160428T175947Z" creationid="explorer" creationdate="20160428T175947Z">
        <seg>=SUBTITLE Perl 5 a Perl 6, en pocas palabras: ¿Cómo hago lo que solía hacer?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=TITLE Concurrency</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ram" changedate="20160429T165715Z" creationid="ram" creationdate="20160429T165457Z">
        <seg>=TITLE Concurrencia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=begin code
my $p1 = Promise.new;
say $p1.status;         # Planned;
$p1.keep('result');
say $p1.status;         # Kept
say $p1.result;         # result</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160429T202217Z" creationid="ramiroencinas" creationdate="20160429T201938Z">
        <seg>=begin code
my $p1 = Promise.new;
say $p1.status;         # Planificado;
$p1.keep('resultado');
say $p1.status;         # Guardado
say $p1.result;         # resultado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=begin comment</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20130102T012722Z">
        <seg>=begin comment</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=begin pod</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20160428T175547Z" creationid="explorer" creationdate="20160428T175547Z">
        <seg>=begin pod</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=end comment</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20140716T150643Z" creationid="explorer" creationdate="20140716T150643Z">
        <seg>=end comment</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 DESCRIPTION</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=head1 DESCRIPCIÓN</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 Examples</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110718T232313Z">
        <seg>=head1 Ejemplos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 High-level APIs</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160429T192819Z" creationid="ramiroencinas" creationdate="20160429T192819Z">
        <seg>=head1 Apis de alto nivel</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 Low-level APIs</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T173709Z" creationid="ramiroencinas" creationdate="20160523T173709Z">
        <seg>=head1 APIs de bajo nivel</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 NOTE</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110211T181749Z">
        <seg>=head1 NOTA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 SPECIAL VARIABLES</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095924Z">
        <seg>=head1 VARIABLES ESPECIALES</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 Syntax</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20121113T002808Z">
        <seg>=head1 Sintaxis</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 Variables</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T180536Z">
        <seg>=head1 Variables</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Attributes</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20120625T193918Z">
        <seg>=head2 Atributos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Channels</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160519T190634Z" creationid="ramiroencinas" creationdate="20160519T190634Z">
        <seg>=head2 Canales</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Deprecated and removed variables</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20120831T235855Z">
        <seg>=head2 Variables obsoletas y eliminadas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 General Variables</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095946Z">
        <seg>=head2 Variables generales</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Inheritance</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20120625T193902Z">
        <seg>=head2 Herencia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Locks</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160527T190007Z" creationid="ramiroencinas" creationdate="20160527T190007Z">
        <seg>=head2 Bloqueos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 MAD</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110922T112036Z">
        <seg>=head2 MAD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Methods</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20120625T193941Z">
        <seg>=head2 Métodos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Proc::Async</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T102920Z" creationid="ramiroencinas" creationdate="20160521T102920Z">
        <seg>=head2 Proc::Async</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Promises</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160429T192827Z" creationid="ramiroencinas" creationdate="20160429T192827Z">
        <seg>=head2 Promesas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Schedulers</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T175839Z" creationid="ramiroencinas" creationdate="20160523T175839Z">
        <seg>=head2 Programadores</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Signatures</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="jmerelo" changedate="20150905T111137Z" creationid="jmerelo" creationdate="20150905T111137Z">
        <seg>=head2 Firmas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Smartmatch Operator</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20121226T000419Z">
        <seg>=head2 Operador Coincidencia inteligente</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Supplies</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160506T171622Z" creationid="ramiroencinas" creationdate="20160506T171622Z">
        <seg>=head2 Suministros</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Switch Statements</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20120705T225431Z">
        <seg>=head2 Instrucciones Switch</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Threads</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T173716Z" creationid="ramiroencinas" creationdate="20160523T173716Z">
        <seg>=head2 Hilos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Variables related to filehandles</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20121110T230219Z">
        <seg>=head2 Variables relacionadas con identificadores de archivo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Variables related to regular expressions</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20120807T010246Z">
        <seg>=head2 Variables relacionadas con las expresiones regulares</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Variables related to the interpreter state</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20120822T201455Z">
        <seg>=head2 Variables relacionadas con el estado del intérprete</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 exec</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T184702Z">
        <seg>=head2 exec</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 CurrentThreadScheduler</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160527T185521Z" creationid="ramiroencinas" creationdate="20160527T185521Z">
        <seg>=head3 CurrentThreadScheduler</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Performance issues</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20140729T004908Z" creationid="explorer" creationdate="20140729T004908Z">
        <seg>=head3 Problemas de rendimiento</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 ThreadPoolScheduler</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160527T184837Z" creationid="ramiroencinas" creationdate="20160527T184837Z">
        <seg>=head3 ThreadPoolScheduler</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Variables related to formats</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20120818T231146Z">
        <seg>=head3 Variables relacionadas con formatos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095420Z">
        <seg>=item $.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $&lt;I&lt;digits&gt;&gt; ($1, $2, ...)</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20120807T012342Z">
        <seg>=item $&lt;I&lt;dígitos&gt;&gt; ($1, $2, ...)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $ARG</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095937Z">
        <seg>=item $ARG</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $BASETIME</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095013Z">
        <seg>=item $BASETIME</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $COMPILING</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T100119Z">
        <seg>=item $COMPILING</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $EFFECTIVE_GROUP_ID</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T094906Z">
        <seg>=item $EFFECTIVE_GROUP_ID</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $EFFECTIVE_USER_ID</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T094938Z">
        <seg>=item $EFFECTIVE_USER_ID</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $EGID</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110717T233656Z">
        <seg>=item $EGID</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $EUID</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T094940Z">
        <seg>=item $EUID</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $EXECUTABLE_NAME</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T100417Z">
        <seg>=item $EXECUTABLE_NAME</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $GID</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110717T233646Z">
        <seg>=item $GID</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $INPLACE_EDIT</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T100242Z">
        <seg>=item $INPLACE_EDIT</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $INPUT_LINE_NUMBER</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095413Z">
        <seg>=item $INPUT_LINE_NUMBER</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $INPUT_RECORD_SEPARATOR</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095422Z">
        <seg>=item $INPUT_RECORD_SEPARATOR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $LAST_PAREN_MATCH</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095052Z">
        <seg>=item $LAST_PAREN_MATCH</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $LAST_REGEXP_CODE_RESULT</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095200Z">
        <seg>=item $LAST_REGEXP_CODE_RESULT</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $LAST_SUBMATCH_RESULT</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095058Z">
        <seg>=item $LAST_SUBMATCH_RESULT</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $LIST_SEPARATOR</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T100037Z">
        <seg>=item $LIST_SEPARATOR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $MATCH</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T100451Z">
        <seg>=item $MATCH</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $NR</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095415Z">
        <seg>=item $NR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $OFS</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110717T233910Z">
        <seg>=item $OFS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $OLD_PERL_VERSION</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095739Z">
        <seg>=item $OLD_PERL_VERSION</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $ORS</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095438Z">
        <seg>=item $ORS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $OSNAME</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T100251Z">
        <seg>=item $OSNAME</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $OUTPUT_AUTOFLUSH</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095500Z">
        <seg>=item $OUTPUT_AUTOFLUSH</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $OUTPUT_FIELD_SEPARATOR</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095359Z">
        <seg>=item $OUTPUT_FIELD_SEPARATOR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $OUTPUT_RECORD_SEPARATOR</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095435Z">
        <seg>=item $OUTPUT_RECORD_SEPARATOR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $PERLDB</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T100304Z">
        <seg>=item $PERLDB</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $PERL_VERSION</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095022Z">
        <seg>=item $PERL_VERSION</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $PID</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110717T233641Z">
        <seg>=item $PID</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $POSTMATCH</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095040Z">
        <seg>=item $POSTMATCH</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $PREMATCH</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095033Z">
        <seg>=item $PREMATCH</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $PROCESS_ID</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T100059Z">
        <seg>=item $PROCESS_ID</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $REAL_GROUP_ID</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T100104Z">
        <seg>=item $REAL_GROUP_ID</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $REAL_USER_ID</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T094929Z">
        <seg>=item $REAL_USER_ID</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $RS</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T115844Z">
        <seg>=item $RS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $SUBSCRIPT_SEPARATOR</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T094924Z">
        <seg>=item $SUBSCRIPT_SEPARATOR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $SUBSEP</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T094924Z">
        <seg>=item $SUBSEP</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $SYSTEM_FD_MAX</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T100126Z">
        <seg>=item $SYSTEM_FD_MAX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $UID</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T094930Z">
        <seg>=item $UID</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item $a</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110717T233709Z">
        <seg>=item $a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item %LAST_MATCH_START</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095139Z">
        <seg>=item %LAST_MATCH_START</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item %LAST_PAREN_MATCH</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095106Z">
        <seg>=item %LAST_PAREN_MATCH</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item -X</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T183419Z">
        <seg>=item -X</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item -X DIRHANDLE</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110718T020025Z">
        <seg>=item -X IDENTIFICADOR_DIR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item -X EXPR</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item -X EXPR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item @ARG</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110717T233629Z">
        <seg>=item @ARG</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item @LAST_MATCH_END</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095105Z">
        <seg>=item @LAST_MATCH_END</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item @LAST_MATCH_START</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095123Z">
        <seg>=item @LAST_MATCH_START</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item ARGV</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T074519Z">
        <seg>=item ARGV</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item binmode FILEHANDLE</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110718T004731Z">
        <seg>=item binmode IDENTIFICADOR_ARCHIVO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item break</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item break</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item continue</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item continue</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item endgrent</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T183808Z">
        <seg>=item endgrent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item endhostent</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T183810Z">
        <seg>=item endhostent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item endnetent</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T183811Z">
        <seg>=item endnetent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item endprotoent</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T183812Z">
        <seg>=item endprotoent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item endpwent</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T183805Z">
        <seg>=item endpwent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item endservent</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T183814Z">
        <seg>=item endservent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item exec LIST</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item exec LISTA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item fork</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T183617Z">
        <seg>=item fork</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item format</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110819T110146Z">
        <seg>=item formato</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item getgrent</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T183752Z">
        <seg>=item getgrent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item getgrgid GID</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item getgrgid GID</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item getgrnam NAME</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item getgrnam NOMBRE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item gethostbyaddr ADDR,ADDRTYPE</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item gethostbyaddr DIRECCIÓN,TIPODIR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item gethostbyname NAME</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item gethostbyname NOMBRE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item gethostent</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T183756Z">
        <seg>=item gethostent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item getlogin</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T183724Z">
        <seg>=item getlogin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item getnetbyaddr ADDR,ADDRTYPE</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item getnetbyaddr DIRECCIÓN,TIPODIR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item getnetbyname NAME</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item getnetbyname NOMBRE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item getnetent</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T183757Z">
        <seg>=item getnetent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item getprotobyname NAME</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item getprotobyname NOMBRE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item getprotobynumber NUMBER</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item getprotobynumber NÚMERO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item getprotoent</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T183758Z">
        <seg>=item getprotoent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item getpwent</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T183749Z">
        <seg>=item getpwent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item getpwuid UID</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item getpwuid UID</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item getservbyname NAME,PROTO</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item getservbyname NOMBRE,PROTO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item getservbyport PORT,PROTO</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item getservbyport PUERTO,PROTO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item getservent</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T183759Z">
        <seg>=item getservent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item getsockopt SOCKET,LEVEL,OPTNAME</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T183816Z">
        <seg>=item getsockopt SOCKET,LEVEL,OPTNAME</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item goto &amp;NAME</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item goto &amp;NOMBRE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item goto EXPR</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item goto EXPR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item grep EXPR,LIST</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item grep EXPR,LISTA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item ioctl FILEHANDLE,FUNCTION,SCALAR</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T183827Z">
        <seg>=item ioctl FILEHANDLE,FUNCTION,SCALAR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item kill SIGNAL, LIST</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item kill SEÑAL, LISTA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item last</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item last</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item last EXPR</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20140715T134543Z" creationid="explorer" creationdate="20140715T133401Z">
        <seg>=item last EXPR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item lstat</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T183841Z">
        <seg>=item lstat</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item lstat DIRHANDLE</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20120527T035505Z">
        <seg>=item lstat IDENTIFICADOR_DIR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item lstat EXPR</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item lstat EXPR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item m//</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item m//</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item map EXPR,LIST</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item map EXPR,LISTA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item mkdir</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item mkdir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item mkdir FILENAME</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item mkdir ARCHIVO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item my TYPE VARLIST</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20140716T133622Z" creationid="explorer" creationdate="20140716T133325Z">
        <seg>=item my TIPO VARLIST</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item my TYPE VARLIST : ATTRS</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20140716T133742Z" creationid="explorer" creationdate="20140716T133338Z">
        <seg>=item my TIPO VARLIST : ATRIBUTOS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item my VARLIST : ATTRS</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20140716T133712Z" creationid="explorer" creationdate="20140716T133331Z">
        <seg>=item my VARLIST : ATRIBUTOS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item next</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item next</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item next EXPR</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20140716T135743Z" creationid="explorer" creationdate="20140716T135743Z">
        <seg>=item next EXPR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item no MODULE</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item no MÓDULO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item no MODULE LIST</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item no MÓDULO LISTA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item no MODULE VERSION</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item no MÓDULO VERSIÓN</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item no VERSION</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item no VERSIÓN</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item oct</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item oct</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item open FILEHANDLE</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110718T011110Z">
        <seg>=item open IDENTIFICADOR_ARCHIVO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item open FILEHANDLE,MODE,EXPR</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110718T011036Z">
        <seg>=item open IDENTIFICADOR_ARCHIVO,MODO,EXPR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item open FILEHANDLE,MODE,EXPR,LIST</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110718T011049Z">
        <seg>=item open IDENTIFICADOR_ARCHIVO,MODO,EXPR,LISTA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item open FILEHANDLE,MODE,REFERENCE</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110718T011058Z">
        <seg>=item open IDENTIFICADOR_ARCHIVO,MODO,REFERENCIA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item our TYPE VARLIST</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20140716T143100Z" creationid="explorer" creationdate="20140716T143100Z">
        <seg>=item our TIPO VARLIST</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item our TYPE VARLIST : ATTRS</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20140716T143135Z" creationid="explorer" creationdate="20140716T143135Z">
        <seg>=item our TIPO VARLIST : ATRIBUTOS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item our VARLIST : ATTRS</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20140716T143113Z" creationid="explorer" creationdate="20140716T143113Z">
        <seg>=item our VARLIST : ATRIBUTOS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item p</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T181110Z">
        <seg>=item p</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item package NAMESPACE</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item package ESPACIO_NOMBRES</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item package NAMESPACE BLOCK</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110514T175410Z">
        <seg>=item package ESPACIO_NOMBRES BLOQUE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item print</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item print</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item print FILEHANDLE</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110718T011436Z">
        <seg>=item print IDENTIFICADOR_ARCHIVO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item print LIST</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item print LISTA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item printf</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110718T011512Z">
        <seg>=item printf</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item printf FILEHANDLE</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110718T011503Z">
        <seg>=item printf IDENTIFICADOR_ARCHIVO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item printf FORMAT, LIST</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item printf FORMATO, LISTA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item q/STRING/</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item q/STRING/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item qq/STRING/</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item qq/STRING/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item qr/STRING/</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item qr/STRING/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item qw/STRING/</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item qw/STRING/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item qx/STRING/</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item qx/STRING/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item readpipe EXPR</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item readpipe EXPR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item redo</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item redo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item redo EXPR</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20140716T153024Z" creationid="explorer" creationdate="20140716T153024Z">
        <seg>=item redo EXPR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item s///</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item s///</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item say</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item say</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item say FILEHANDLE</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110718T011946Z">
        <seg>=item say IDENTIFICADOR_ARCHIVO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item say LIST</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item say LISTA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item setgrent</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T183903Z">
        <seg>=item setgrent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item sethostent STAYOPEN</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item sethostent SIGUEABIERTO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item setnetent STAYOPEN</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item setnetent SIGUEABIERTO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item setprotoent STAYOPEN</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item setprotoent SIGUEABIERTO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item setpwent</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T183947Z">
        <seg>=item setpwent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item setservent STAYOPEN</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item setservent SIGUEABIERTO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item shift</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item shift</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item shift EXPR</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110514T181145Z">
        <seg>=item shift EXPR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item shmwrite ID,STRING,POS,SIZE</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item shmwrite ID,CADENA,POSICIÓN,TAMAÑO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item splice ARRAY</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20150619T230015Z" creationid="explorer" creationdate="20150619T230015Z">
        <seg>=item splice ARRAY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item splice ARRAY,OFFSET</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20150619T230005Z" creationid="explorer" creationdate="20150619T230005Z">
        <seg>=item splice ARRAY,DESPLAZAMIENTO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item splice ARRAY,OFFSET,LENGTH</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20150619T225957Z" creationid="explorer" creationdate="20150619T225957Z">
        <seg>=item splice ARRAY,DESPLAZAMIENTO,LONGITUD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item splice EXPR</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20150619T230141Z" creationid="explorer" creationdate="20150619T230141Z">
        <seg>=item splice EXPR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item splice EXPR,OFFSET</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20150619T230138Z" creationid="explorer" creationdate="20150619T230138Z">
        <seg>=item splice EXPR,DESPLAZAMIENTO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item splice EXPR,OFFSET,LENGTH</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20150619T230132Z" creationid="explorer" creationdate="20150619T230132Z">
        <seg>=item splice EXPR,DESPLAZAMIENTO,LONGITUD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item splice EXPR,OFFSET,LENGTH,LIST</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20150619T230123Z" creationid="explorer" creationdate="20150619T230123Z">
        <seg>=item splice EXPR,DESPLAZAMIENTO,LONGITUD,LISTA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item split</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item split</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item split /PATTERN/</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item split /PATRÓN/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item split /PATTERN/,EXPR</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item split /PATRÓN/,EXPR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item stat</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T184327Z">
        <seg>=item stat</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item stat DIRHANDLE</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110718T012658Z">
        <seg>=item stat IDENTIFICADOR_DIR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item stat EXPR</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item stat EXPR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item state TYPE VARLIST</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20140716T170033Z" creationid="explorer" creationdate="20140716T170033Z">
        <seg>=item state TIPO VARLIST</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item state TYPE VARLIST : ATTRS</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20140716T170251Z" creationid="explorer" creationdate="20140716T170251Z">
        <seg>=item state TIPO VARLIST : ATRIBUTOS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item state VARLIST : ATTRS</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20140716T170042Z" creationid="explorer" creationdate="20140716T170042Z">
        <seg>=item state VARLIST : ATRIBUTOS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item status</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20120930T003123Z">
        <seg>=item estado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item study</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item study</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item sub NAME (PROTO) : ATTRS BLOCK</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item sub NOMBRE (PROTO) : ATRIBS BLOQUE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item sub NAME (PROTO) BLOCK</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item sub NOMBRE (PROTO) BLOQUE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item sub NAME : ATTRS BLOCK</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item sub NOMBRE : ATRIBS BLOQUE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item substr EXPR,OFFSET</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item substr EXPR,DESPLAZAMIENTO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item substr EXPR,OFFSET,LENGTH</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item substr EXPR,DESPLAZAMIENTO,LONGITUD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item sysopen FILEHANDLE,FILENAME,MODE,PERMS</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110718T012813Z">
        <seg>=item sysopen IDENTIFICADOR_ARCHIVO,ARCHIVO,MODO,PERMISOS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item sysread FILEHANDLE,SCALAR,LENGTH</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110718T012835Z">
        <seg>=item sysread IDENTIFICADOR_ARCHIVO,ESCALAR,LONGITUD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item system LIST</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item system LISTA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item system PROGRAM LIST</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item system PROGRAMA LISTA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item syswrite FILEHANDLE,SCALAR</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110718T013042Z">
        <seg>=item syswrite IDENTIFICADOR_ARCHIVO,ESCALAR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item syswrite FILEHANDLE,SCALAR,LENGTH</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110718T013037Z">
        <seg>=item syswrite IDENTIFICADOR_ARCHIVO,ESCALAR,LONGITUD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item time</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item time</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item times</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T184251Z">
        <seg>=item times</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item tr///</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item tr///</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item truncate EXPR,LENGTH</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item truncate EXPR,LONGITUD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item ucfirst</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item ucfirst</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item unlink</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item unlink</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item unlink LIST</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item unlink LISTA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item unpack TEMPLATE</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item unpack PLANTILLA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item unshift EXPR,LIST</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110514T183721Z">
        <seg>=item unshift EXPR,LISTA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item use Module</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20120902T021536Z">
        <seg>=item use Módulo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item use Module LIST</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item use Módulo LISTA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item use Module VERSION</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item use Módulo VERSIÓN</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item use Module VERSION LIST</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item use Módulo VERSIÓN LISTA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item use VERSION</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item use VERSIÓN</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item utime LIST</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item utime LISTA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item values ARRAY</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item values ARRAY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item values EXPR</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110514T183757Z">
        <seg>=item values EXPR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item wait</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T184230Z">
        <seg>=item wait</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item waitpid PID,FLAGS</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20151001T142141Z">
        <seg>=item waitpid PID,INDICADORES</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item write</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item write</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item write EXPR</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item write EXPR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item y///</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>=item y///</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>?</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20150905T120204Z" creationid="explorer" creationdate="20150905T120204Z">
        <seg>?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20120728T084235Z">
        <seg>A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A
thread can be thought of as a piece of code that may eventually be run
on a processor, the arrangement for which is made almost entirely by the
virtual machine and/or operating system.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T174230Z" creationid="ramiroencinas" creationdate="20160523T174152Z">
        <seg>Un hilo es un trozo de código que se ejecuta en un procesador en un momento dado y su gestión depende casi en su totalidad de la máquina virtual y/o del sistema operativo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A C&lt;live&gt; L&lt;Supply&gt;
is created by the L&lt;Supplier&gt; factory, each emitted value is passed to
all the active tappers as they are added:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="Ram" changedate="20160508T155826Z" creationid="ramiroencinas" creationdate="20160507T155917Z">
        <seg>La creación de un L&lt;Suministro&gt; a C&lt;tiempo real&gt; se realiza mediante un L&lt;Proveedor&gt; (Supplier) y cada valor emitido se pasa a todos los "taps" o suscriptores activos según se van agregando:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A L&lt;Channel&gt; is a thread-safe queue that can have multiple readers and
writers that could be considered to be similar in operation to a "fifo" or
named pipe except it does not enable inter-process communication.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160519T191956Z" creationid="ramiroencinas" creationdate="20160519T191956Z">
        <seg>Un L&lt;Canal&gt; es una cola con seguridad multihilo que permite operaciones simultáneas de lectura y escritura como lo haría un sistema "fifo" o una tubería con nombre excepto que no permite una comunicación entre procesos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A L&lt;Promise&gt; can also be scheduled to be automatically kept at a future time:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T173416Z" creationid="ramiroencinas" creationdate="20160502T173237Z">
        <seg>Una L&lt;Promesa&gt; también puede programarse para que se inicie en un futuro:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A L&lt;Promise|/type/Promise&gt; (also called I&lt;future&gt; in other programming
environments) encapsulates the result of a computation that may not
have completed or even started at the time the promise is obtained.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160429T201628Z" creationid="ramiroencinas" creationdate="20160429T201628Z">
        <seg>Una L&lt;Promesa|/type/Promise&gt; (en otros entornos de programación también se denomina I&lt; valor futuro&gt;) es la encapsulación del resultado de una computación que puede no estar disponible todavía.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A L&lt;Supply&gt; is an asynchronous data streaming mechanism that can be
consumed by one or more consumers simultaneously in a manner similar to
"events" in other programming languages and can be seen as enabling
"Event Driven" or reactive designs.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160506T172329Z" creationid="ramiroencinas" creationdate="20160506T172329Z">
        <seg>Un L&lt;Suministro&gt; es un mecanismo de transmisión de datos asíncrono que puede ser consumido de forma simúltanea por uno o más consumidores de forma similar a los "eventos" en otros lenguajes de programación. Un L&lt;Suministro&gt; puede considerarse como "Orientado a Eventos" o de diseño reactivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A library may wish to provide an alternative scheduler implementation if
it has special requirements, for instance a UI library may want all code
to be run within a single UI thread, or some custom priority mechanism
may be required, however the implementations provided as standard and
described below should suffice for most user code.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160527T184744Z" creationid="ramiroencinas" creationdate="20160527T184744Z">
        <seg>Es posible que una librería pueda desear proporcionar una implementación alternativa del programador en caso de requerimientos especiales, como por ejemplo una librería de interface gráfica que quiera ejecutar todo su código en un solo hilo, o si se requiere algún mecanismo de priorización personalizada. En cualquier caso las implementaciones proporcionadas como estándar que hemos visto antes deberían ser suficientes para la mayor parte de los casos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A second argument can be supplied to C&lt;interval&gt; which specifies a delay
in seconds before the first event is fired.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T163801Z" creationid="ramiroencinas" creationdate="20160507T163801Z">
        <seg>Se puede proporcionar un segundo argumento a C&lt;interval&gt; para indicar el retraso en segundos después del inicio del primer evento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A thread can either be created and then actually run later:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T174755Z" creationid="ramiroencinas" creationdate="20160523T174755Z">
        <seg>Puede crearse un hilo y ejecutarlo después en un momento dado:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A very frequent use of promises is to run a piece of code, and keep the
promise once it returns successfully, or break it when the code dies.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T173823Z" creationid="ramiroencinas" creationdate="20160502T173823Z">
        <seg>Las promesas se utilizan muy a menudo para ejecutar un trozo de código y obtener el resultado correcto o una excepción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additionally, certain Perl features may implicitly operate in an asynchronous
fashion, so in order to ensure predictable interoperation with these features,
user code should, where possible, avoid the lower level concurrency APIs
(i.e. L&lt;Thread&gt; and L&lt;Scheduler&gt; ) and use the higher-level interfaces.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160429T192750Z" creationid="ramiroencinas" creationdate="20160429T192750Z">
        <seg>Además, algunas funcionalidades de Perl 6 pueden tener aspectos asíncronos, y para garantizar una armonía adecuada entre estos aspectos, es necesario evitar en la medida de lo posible el uso de las APIs de concurrencia de bajo nivel (por ej. L&lt;Hilos|https://doc.perl6.org/type/Thread&gt; y L&lt;Programadores|https://doc.perl6.org/type/Scheduler&gt;) y utilizar en su lugar las interfaces de alto nivel.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An C&lt;on-demand&gt; L&lt;Supply&gt; can also be created from a list of values that
will be emitted in turn, thus the first C&lt;on-demand&gt; example could be
written as:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T211817Z" creationid="ramiroencinas" creationdate="20160520T211817Z">
        <seg>Un L&lt;Suministro&gt; C&lt;a-demanda&gt; también puede crearse desde una lista de valores que se vayan emitiendo uno detrás de otro. De esta forma, el primer ejemplo que hemos visto C&lt;a-demanda&gt; también puede escribirse de esta forma:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An C&lt;on-demand&gt; L&lt;Supply&gt; can also be created from a list of values that
will be emitted in turn, thus the first C&lt;on-demand&gt; example could be 
written as:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="Ram" changedate="20160508T171106Z" creationid="Ram" creationdate="20160508T171106Z">
        <seg>También se puede crear un L&lt;Suministro&gt; C&lt;a demanda&gt; desde una lista de valores que irán emitiéndose por turno, de forma que el primer ejemplo que vimos C&lt;a demanda&gt; también puede escribirse como sigue:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An existing supply object can be filtered or transformed, using the methods
C&lt;grep&gt; and C&lt;map&gt; respectively, to create a new supply in a manner like
the similarly named list methods: C&lt;grep&gt; returns a supply such that only
those events emitted on the source stream for which the C&lt;grep&gt; condition
is true is emitted on the second supply:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="Ram" changedate="20160508T172219Z" creationid="Ram" creationdate="20160508T172219Z">
        <seg>Un objeto suministro puede filtrarse o transformarse mediante los métodos C&lt;grep&gt; y C&lt;map&gt; respectivamente para crear un nuevo suministro de forma parecida a los métodos de lista con nombre similares: C&lt;grep&gt; devuelve un suministro con los eventos que cumplen la condición indicada:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An item is queued onto the L&lt;Channel&gt; with the
L&lt;method send|/type/Channel#method_send&gt;, and the L&lt;method
receive|/type/Channel#method_receive&gt; removes an item from the queue
and returns it, blocking until a new item is sent if the queue is empty:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160519T193613Z" creationid="ramiroencinas" creationdate="20160519T193613Z">
        <seg>Mediante el L&lt;método send|/type/Channel#method_send&gt; se encola un elemento en la L&lt;Cola&gt;, mientras que el L&lt;método receive|/type/Channel#method_receive&gt; elimina un elemento de la cola y lo devuelve. La L&lt;Cola&gt; se bloquea si está vacía hasta que se encola en ella un nuevo elemento:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And C&lt;anyof&gt; returns a new promise that will be kept when any of the
original promises is kept or broken:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160503T202055Z" creationid="ramiroencinas" creationdate="20160503T202055Z">
        <seg>Y C&lt;anyof&gt; devuelve una promesa cuyo resultado está disponible cuando cualquiera de las promesas originales finaliza o da una excepción:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assuming that the C&lt;$*SCHEDULER&gt; hasn't been changed from the default,
will print the numbers 0 to 10 approximately (i.e with operating system
scheduling tolerances) every two seconds.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160527T183245Z" creationid="ramiroencinas" creationdate="20160527T183245Z">
        <seg>Asumiendo que C&lt;$*SCHEDULER&gt; esté por defecto, visualizará los números del 1 al 10 de forma aproximada (dependiendo de la tolerancia que tenga el sistema operativo respecto al programador) con un intervalo de 2 segundos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At its simplest, a L&lt;Supply&gt; is a message stream that can have multiple
subscribers created with the method C&lt;tap&gt; on to which data items can be
placed with C&lt;emit&gt;.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160506T172824Z" creationid="ramiroencinas" creationdate="20160506T172824Z">
        <seg>Básicamente, un L&lt;Suministro&gt; es una transmisión en forma de mensaje que puede tener varios suscriptores creados con el método C&lt;tap&gt; donde los elementos pueden colocarse con C&lt;emit&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20120728T084236Z">
        <seg>B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because the higher level classes
(L&lt;Promise&gt;, L&lt;Supply&gt; and L&lt;Channel&gt;,) use a L&lt;Lock&gt; where required it
is unlikely that user code will need to use a L&lt;Lock&gt; directly.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160527T190921Z" creationid="ramiroencinas" creationdate="20160527T190921Z">
        <seg>Como las clases de alto nivel (L&lt;Promise&gt;, L&lt;Supply&gt; y L&lt;Channel&gt;,) utilizan L&lt;Lock&gt; cuando es requerido, no es necesario utilizar L&lt;Lock&gt; directamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Beyond that there are  no further facilities for synchronization or resource
sharing which is largely why it should be emphasised that threads are unlikely
to be useful directly in user code.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T175810Z" creationid="ramiroencinas" creationdate="20160523T175810Z">
        <seg>Más allá de esto no existen funcionalidades relacionadas con la sincronización o el uso compartido de recursos, y por este motivo fundamentalmente el uso directo de hilos no es muy útil.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bool.pick;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204158Z" creationid="ramiroencinas" creationdate="20160520T204158Z">
        <seg>Bool.pick;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;Channel&gt; will return a different L&lt;Channel&gt; fed with the same data
each time it is called.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T102659Z" creationid="ramiroencinas" creationdate="20160521T102435Z">
        <seg>El método C&lt;Channel&gt; devolverá una vía distinta cada vez que sea llamado, pero con los mismos datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;await&gt; is almost equivalent to calling C&lt;result&gt; on the promise object
returned by C&lt;start&gt; but it will also take a list of promises and return
the result of each:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160503T194527Z" creationid="ramiroencinas" creationdate="20160503T194527Z">
        <seg>C&lt;await&gt; es casi lo mismo que llamar a C&lt;result&gt; en el objeto promesa devuelto por C&lt;start&gt; y también podrá tomar una lista de promesas y devolver el resultado de cada una:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;keep&gt; changes the
status of the promise to C&lt;Kept&gt; setting the result to the positional
argument.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T082948Z" creationid="ramiroencinas" creationdate="20160502T081055Z">
        <seg>C&lt;keep&gt; establece el resultado en la primera promesa mediante su argumento posicional cambiando su estado a guardado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;map&gt; returns a new supply such that for each item emitted to the
original supply a new item which is the result of the expression passed
to the C&lt;map&gt; is emitted:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160519T184016Z" creationid="ramiroencinas" creationdate="20160519T184016Z">
        <seg>C&lt;map&gt; devuelve un nuevo suministro de forma que por cada elemento emitido al suministro original se emite un nuevo elemento como resultado de la expresión que se pasa a C&lt;map&gt;: :</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;result&gt; blocks the current thread of execution until the
promise is kept or broken, if it was kept then it will return the
result (that is the value passed to C&lt;keep&gt;, ) otherwise it will throw an
exception based on the value passed to C&lt;break&gt;.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T083625Z" creationid="ramiroencinas" creationdate="20160502T083541Z">
        <seg>C&lt;result&gt; bloquea el actual hilo de ejecución hasta que la promesa finalice. Si obtiene un resultado, lo devolverá (el valor pasado a C&lt;keep&gt;), y en caso contrario lanzará una excepción basada en el valor pasado al método C&lt;break&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Calling C&lt;done&gt; on the supply object calls the C&lt;done&gt; callback that
may be specified for any taps, but does not prevent any further events
being emitted to the stream, or taps receiving them.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T162648Z" creationid="ramiroencinas" creationdate="20160507T162648Z">
        <seg>Si dentro de un tap llamas a C&lt;done&gt; saldrás del tap en cuestión y no afectará a cualquier otro tap o a la emisión de ningún evento que pudiera producirse.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Channels can be used in place of the L&lt;Supply&gt; in the C&lt;whenever&gt; of a
C&lt;react&gt; block described earlier:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T101351Z" creationid="ramiroencinas" creationdate="20160521T101351Z">
        <seg>Los canales pueden escribirse como un L&lt;Suministro&gt; en el bloque C&lt;whenever&gt; de un bloque C&lt;react&gt; como vimos antes:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Despite the apparent advantage the L&lt;Scheduler&gt; interface provides over
that of L&lt;Thread&gt; all of functionality is available through higher level
interfaces and it shouldn't be necessary to use a scheduler directly,
except perhaps in the cases mentioned above where a scheduler can be
supplied explicitly to certain methods.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160527T184232Z" creationid="ramiroencinas" creationdate="20160527T184232Z">
        <seg>Aunque exista una ventaja aparente de L&lt;Scheduler&gt; sobre L&lt;Thread&gt; toda la funcionalidad se encuentra disponible mediante interfaces de alto nivel y no debería ser necesario utilizar directamente un programador, excepto quizá, en los casos antes mencionados donde un programador puede proporcionarse de forma explícita a ciertos métodos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>END</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20120906T223846Z">
        <seg>END</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each tap of a supply created
by C&lt;interval&gt; has its own sequence starting from 0, as illustrated by
the following:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T164003Z" creationid="ramiroencinas" creationdate="20160507T164003Z">
        <seg>Cada tap de un suministro creado por C&lt;interval&gt; tiene su propia secuencia comenzando desde 0, como puedes ver a continuación:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T074012Z">
        <seg>Ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Examples:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110220T005509Z">
        <seg>Ejemplos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For
example:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095320Z">
        <seg>Por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20160404T181746Z" creationid="explorer" creationdate="20160404T181746Z">
        <seg>Por ejemplo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110220T001507Z">
        <seg>Por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance,</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20121218T195803Z">
        <seg>Por ejemplo,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110717T232813Z">
        <seg>Por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For this purpose there is the L&lt;method vow|/type/Promise#method_vow&gt;, which
returns a L&lt;Vow&gt; object which becomes the only mechanism by which the promise
can be kept or broken.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160506T164248Z" creationid="ramiroencinas" creationdate="20160506T164059Z">
        <seg>Para este propósito existe el L&lt;método vow|/type/Promise#method_vow&gt;, que devuelve un objeto L&lt;Vow&gt; como único mecanismo por el cual se puede producir a demanda la consecución o la excepción de una promesa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Good luck!</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T161623Z">
        <seg>¡Buena suerte!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here be dragons.</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>A partir de aquí, dragones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here the C&lt;break&gt; will cause the code block of the C&lt;then&gt; to throw an
exception when it calls the C&lt;result&gt; method on the original promise
that was passed as an argument, which will subsequently cause the second
promise to be broken, raising an exception in turn when its result
is taken.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T173026Z" creationid="ramiroencinas" creationdate="20160502T171108Z">
        <seg>C&lt;break&gt; produce una excepción en el bloque de código de C&lt;then&gt; al llamar al método C&lt;result&gt; de la promesa original que fue pasada como argumento, que a su vez produce una excepción en la segunda promesa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here the C&lt;result&gt; of the promise returned is the value returned from
the code.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T174054Z" creationid="ramiroencinas" creationdate="20160502T174054Z">
        <seg>El valor C&lt;result&gt; que devuelve la promesa es el valor devuelto por el código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here the C&lt;whenever&gt; keyword creates a tap on the L&lt;Supply&gt; from the provided 
block.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T163201Z" creationid="ramiroencinas" creationdate="20160507T163201Z">
        <seg>La palabra clave C&lt;whenever&gt; crea un tap en el L&lt;Suministro&gt; desde el bloque proporcionado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here the L&lt;then|/type/Promise#method_then&gt; method schedules code to be
executed when the first L&lt;Promise&gt; is kept or broken, itself returning
a new L&lt;Promise&gt; which will be kept with the result of the code when
it is executed (or broken if the code fails.)</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T082840Z" creationid="ramiroencinas" creationdate="20160502T080840Z">
        <seg>En este ejemplo el método L&lt;then|/type/Promise#method_then&gt; hace que se ejecute el código de su argumento cuando la primera promesa finalice porque obtenga un resultado o se rompa mediante una excepción, devolviendo a su vez una L&lt;Promesa&gt; nueva que de igual modo finalizará con un resultado o con una excepción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here the X&lt;C&lt;whenever&gt;&gt; keyword creates a tap on the L&lt;Supply&gt; from the provided
block.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T211551Z" creationid="ramiroencinas" creationdate="20160520T211551Z">
        <seg>En este caso, la palabra clave X&lt;C&lt;whenever&gt;&gt; crea un tap en el L&lt;Suministro&gt; desde el bloque proporcionado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's an example:</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>Aquí hay un ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I'm not quite clear which specific features should be included below</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T203901Z" creationid="ramiroencinas" creationdate="20160520T203901Z">
        <seg>I'm not quite clear which specific features should be included below</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If an attempt to keep or break the Promise is made
directly then the exception L&lt;X::Promise::Vowed&gt; will be thrown, as long
as the vow object is kept private, the status of the promise is safe:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160506T165225Z" creationid="ramiroencinas" creationdate="20160506T164213Z">
        <seg>Cualquier intento para producir la consecución o la excepción de la Promesa de forma directa no se llevará a cabo y lanzará la excepción L&lt;X::Promise::Vowed&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the channel has been closed with the L&lt;method
close|/type/Channel#method_close&gt; then any C&lt;send&gt; will cause the
exception L&lt;X::Channel::SendOnClosed&gt; to be thrown, and a C&lt;receive&gt;
will throw a L&lt;X::Channel::ReceiveOnClose&gt; if there are no more items
on the queue.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T205204Z" creationid="ramiroencinas" creationdate="20160520T205204Z">
        <seg>El L&lt;método close|/type/Channel#method_close&gt; cierra el canal. Cuando el canal está cerrado, el uso del método C&lt;send&gt;, lanzará una excepción L&lt;X::Channel::SendOnClosed&gt;, mientras que el método C&lt;receive&gt; lanzará la excepción L&lt;X::Channel::ReceiveOnClose&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the exception is marked
as seen by a C&lt;when&gt; or C&lt;default&gt; block, the exception is caught and handled.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T212637Z" creationid="ramiroencinas" creationdate="20160520T212637Z">
        <seg>Si como vemos, se indica en un bloque C&lt;when&gt; o C&lt;default&gt; la excepción, ésta será controlada y gestionada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the maximum is exceeded then C&lt;cue&gt; may queue the
code until such time as a thread becomes available.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160527T185346Z" creationid="ramiroencinas" creationdate="20160527T185346Z">
        <seg>Si se sobrepasa el máximo, C&lt;cue&gt; puede encolar el código hasta que algún hilo quede disponible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the promise had not been broken C&lt;cause&gt; would raise a
L&lt;X::Promise::CauseOnlyValidOnBroken&gt; exception.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T173148Z" creationid="ramiroencinas" creationdate="20160502T173148Z">
        <seg>Si la promesa no genera una excepción, C&lt;cause&gt; tendrá una excepción de tipo L&lt;X::Promise::CauseOnlyValidOnBroken&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are creating a promise that you intend to keep or break yourself
then you probably don't want any code that might receive the promise to
inadvertently (or otherwise,) keep or break the promise before you do.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160506T164803Z" creationid="ramiroencinas" creationdate="20160506T163809Z">
        <seg>Si quieres realizar a demanda la consecución (C&lt;keep&gt;) o la excepción (C&lt;break&gt;) de una promesa, tendrás que hacerlo antes de que lo haga alguna otra parte del código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are using the C&lt;react&gt; or C&lt;supply&gt; block syntax with C&lt;whenever&gt;, you
can add phasers within your C&lt;whenever&gt; blocks to handle the C&lt;done&gt; and C&lt;quit&gt;
messages from the tapped supply:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T213307Z" creationid="ramiroencinas" creationdate="20160520T213307Z">
        <seg>Si utilizas C&lt;whenever&gt; con la sintaxis de los bloques C&lt;react&gt; o C&lt;supply&gt;, puedes utilizar faseados en los bloques C&lt;whenever&gt; para gestionar los mensajes de C&lt;done&gt; y C&lt;quit&gt; desde el tap del suministro:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you need to have an action that runs when the supply finishes, you can do so
by setting the C&lt;done&gt; and C&lt;quit&gt; options in the call to C&lt;tap&gt;:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T212014Z" creationid="ramiroencinas" creationdate="20160520T212014Z">
        <seg>Si necesitas ejecutar código cuando finalice el suministro, puedes hacerlo indicando las opciones C&lt;done&gt; y C&lt;quit&gt; en la llamada del C&lt;tap&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to write to the standard input of the program
you can supply the C&lt;:w&gt; adverb to the constructor and use
the methods L&lt;write|/type/Proc::Async#method_write&gt;,
L&lt;print|/type/Proc::Async#method_print&gt; or
L&lt;say|/type/Proc::Async#method_say&gt; to write to the opened pipe once
the program has been started:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T172808Z" creationid="ramiroencinas" creationdate="20160523T172808Z">
        <seg>Para escribir en la entrada estándar del comando indica el adverbio C&lt;:w&gt; en el constructor y utiliza los métodos L&lt;write|/type/Proc::Async#method_write&gt;,
L&lt;print|/type/Proc::Async#method_print&gt; o
L&lt;say|/type/Proc::Async#method_say&gt; para escribir en la tubería abierta una vez que se ejecute el comando:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to C&lt;await&gt;, two class methods combine several
L&lt;Promise&gt; objects into a new promise: C&lt;allof&gt; returns a promise that
is kept when all the original promises are kept or broken:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160503T201659Z" creationid="ramiroencinas" creationdate="20160503T201659Z">
        <seg>Además del uso de C&lt;await&gt;, los métodos de clases (C&lt;allof&gt; y C&lt;anyof&gt;) pueden combinar varios objetos L&lt;Promesa&gt; en una promesa nueva: C&lt;allof&gt; devuelve una promesa cuyo resultado está disponible cuando todas las promesas originales finalizan correctamente o dan una excepción:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In both cases the completion of the code encapsulated by the L&lt;Thread&gt;
object can be waited on with the C&lt;finish&gt; method which will block until
the thread completes:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T175329Z" creationid="ramiroencinas" creationdate="20160523T175329Z">
        <seg>En ambos casos puede utilizarse el método C&lt;finish&gt; para esperar a que finalice el código encapsulado del L&lt;Hilo&gt; mientras éste queda bloquedado:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In common with most modern programming languages, Perl 6 is designed to
L&lt;support concurrency|http://en.wikipedia.org/wiki/Concurrent_computing&gt;
(allowing more than one thing to happen at the same time) and
asynchronous programming (sometimes called event driven or reactive
programming - that is an event or change in some part of a program
may lead to an event or change in some other part of the program
asynchronously to the program flow).</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ram" changedate="20160429T181249Z" creationid="ram" creationdate="20160429T181249Z">
        <seg>Al igual que la mayoría de los lenguajes de programación modernos, Perl 6 es L&lt;concurrente|http://en.wikipedia.org/wiki/Concurrent_computing&gt;
(hace que sucedan varias cosas al mismo tiempo) y permite la programación asíncrona (también llamada orientada a eventos o programación reactiva - de forma que si se produce un evento o cambio en alguna parte del programa puede producirse un evento o cambio en otra parte del programa de forma asíncrona respecto al flujo del programa).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case the code in the supply block is executed every time the
L&lt;Supply&gt; returned by C&lt;supply&gt; is tapped, as demonstrated by:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T160939Z" creationid="ramiroencinas" creationdate="20160507T160939Z">
        <seg>En este caso el código dentro del bloque supply se ejecuta cada vez que el L&lt;Suministro&gt; devuelto por C&lt;supply&gt; utiliza el método C&lt;tap&gt;, como puedes ver a continuación:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case the code will
be scheduled to run until the program ends normally, however the method
returns a L&lt;Cancellation&gt; object which can be used to cancel the scheduled
execution before normal completion:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160527T183728Z" creationid="ramiroencinas" creationdate="20160527T183728Z">
        <seg>En este caso el código programará la ejecución del programa hasta que finalice de forma normal. Para cancelar la ejecución programada antes de que finalice se utiliza el método C&lt;cancel&gt; que devolverá un objeto L&lt;Cancellation&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is also possible to obtain a L&lt;Channel&gt; from a L&lt;Supply&gt; using the
L&lt;Supply method|/type/Supply#method_Channel&gt; which returns a L&lt;Channel&gt;
which is fed by a C&lt;tap&gt; on the L&lt;Supply&gt;:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T102003Z" creationid="ramiroencinas" creationdate="20160521T102003Z">
        <seg>También es posible obtener un L&lt;Canal&gt; desde un L&lt;Suministro&gt; mediante el L&lt;método Supply|/type/Supply#method_Channel&gt; devolviendo un L&lt;Canal&gt; alimentado desde el C&lt;tap&gt; del L&lt;Suministro&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It provides much of the functionality that user code needs to operate
in a concurrent or asynchronous manner.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160429T201804Z" creationid="ramiroencinas" creationdate="20160429T201804Z">
        <seg>Proporciona gran parte de la funcionalidad que el código necesita para operar de forma concurrente o asíncrona.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It should
be noted that, being a true queue, each value sent to the L&lt;Channel&gt; will only
be available to a single reader on a first read, first served basis: if you
want multiple readers to be able to receive every item sent you probably
want to consider a L&lt;Supply&gt;.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160519T193059Z" creationid="ramiroencinas" creationdate="20160519T193059Z">
        <seg>Como se trata de una cola de verdad, hay que tener en cuenta que cada valor enviado al L&lt;Canal&gt; solo estará disponible al final de la cola para una sola operación de lectura. Si lo que necesitas es que cada elemento enviado a la cola pueda llegar a varias operaciones de lectura, probablemente necesites un L&lt;Suministro&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;Proc::Async&gt; builds on the facilities described to run and interact with
an external program asynchronously:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T103222Z" creationid="ramiroencinas" creationdate="20160521T103120Z">
        <seg>L&lt;Proc::Async&gt; permite la comunicación de forma interactiva y asíncrona con programas externos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>LAST { say 'Job is done.' }</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T213403Z" creationid="ramiroencinas" creationdate="20160520T213403Z">
        <seg>LAST { say 'Trabajo finalizado.' }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that the C&lt;tap&gt; is called on a L&lt;Supply&gt; object created by the
L&lt;Supplier&gt; and new values are emitted on the L&lt;Supplier&gt;.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T160323Z" creationid="ramiroencinas" creationdate="20160507T160323Z">
        <seg>Observa que C&lt;tap&gt; es llamado en un objeto L&lt;Supply&gt; (Suministro) creado por L&lt;Supplier&gt; (Proveedor) y los nuevos valores se emiten desde L&lt;Supplier&gt; (Proveedor).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or alternatively as an C&lt;on-demand&gt; L&lt;Supply&gt; created by the C&lt;supply&gt;
keyword:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T160540Z" creationid="ramiroencinas" creationdate="20160507T160540Z">
        <seg>La forma C&lt;a demanda&gt; de un L&lt;Suministro&gt; se crea mediante la palabra clave C&lt;supply&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or can be created and run at a single invocation:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T174843Z" creationid="ramiroencinas" creationdate="20160523T174843Z">
        <seg>O puede crearse y ejecutarse en una sola invocación:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise, the exception continues to up the call tree (i.e., the same behavior
as when C&lt;quit&gt; is not set).</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T212824Z" creationid="ramiroencinas" creationdate="20160520T212824Z">
        <seg>En caso contrario, la excepción continuará subiendo por el árbol de la llamada (por ej., como cuando no se indica un C&lt;quit&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Promise.in(10).then({$vow.keep});</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204201Z" creationid="ramiroencinas" creationdate="20160520T204201Z">
        <seg>Promise.in(10).then({$vow.keep});</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Promise.in(2),</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204141Z" creationid="ramiroencinas" creationdate="20160520T204141Z">
        <seg>Promise.in(2),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Promise.in(3)</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204143Z" creationid="ramiroencinas" creationdate="20160520T204143Z">
        <seg>Promise.in(3)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Promise.in(3),</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204149Z" creationid="ramiroencinas" creationdate="20160520T204149Z">
        <seg>Promise.in(3),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Promise.in(8600)</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204151Z" creationid="ramiroencinas" creationdate="20160520T204151Z">
        <seg>Promise.in(8600)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Promises gain much of their power by being composable, for example by
chaining:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T075743Z" creationid="ramiroencinas" creationdate="20160429T202705Z">
        <seg>La gran robustez de las promesas radica en su componibilidad, por ejemplo permite realizar encadenamiento:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>QUIT { when X::MyApp::Error { say "App Error: ", $_.message } }</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T213411Z" creationid="ramiroencinas" creationdate="20160520T213411Z">
        <seg>QUIT { when X::MyApp::Error { say "Error: ", $_.message } }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Rakudo allows the maximum number of threads allowed in the default scheduler
to be set by the environment variable C&lt;RAKUDO_MAX_THREADS&gt; at the time
the program is started.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160527T185455Z" creationid="ramiroencinas" creationdate="20160527T185455Z">
        <seg>Rakudo establece este máximo en la variable de entorno C&lt;RAKUDO_MAX_THREADS&gt; en el momento que inicia el programa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Similarly if the code fails (and the promise is thus broken),
then C&lt;cause&gt; will be the L&lt;Exception&gt; object that was thrown:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T174425Z" creationid="ramiroencinas" creationdate="20160502T174425Z">
        <seg>De forma parecida, si el código falla, la promesa lanzará una excepción en forma de objeto L&lt;Exception&gt; accesible mediante C&lt;cause&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20121218T193220Z">
        <seg>Así que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So this:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20120815T000013Z">
        <seg>Así que esto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So:</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>Así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some examples:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110825T113340Z">
        <seg>Algunos ejemplos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some programs (such as C&lt;grep&gt; without a file argument in this
example, ) won't exit until their standard input is closed so
L&lt;close-stdin|/type/Proc::Async#method_close-stdin&gt; can be called when
you are finished writing to allow the L&lt;Promise&gt; returned by C&lt;start&gt;
to be kept.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T173656Z" creationid="ramiroencinas" creationdate="20160523T173656Z">
        <seg>Algunos comandos (como C&lt;grep&gt; sin un fichero como argumento en este ejemplo) no finalizarán hasta que se cierre su entrada estándar. En este caso se llama a L&lt;close-stdin|/type/Proc::Async#method_close-stdin&gt; al final con el propósito de finalizar la L&lt;Promesa&gt; devuelta por C&lt;start&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sorry.</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>Lo sentimos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The
following code outputs 0 ..</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T162930Z" creationid="ramiroencinas" creationdate="20160507T162930Z">
        <seg>El siguiente código visualiza 0 ..</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;last&gt; command immediately exits the loop in question.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110220T005331Z">
        <seg>El comando C&lt;last&gt; sale inmediatamente del bucle en cuestión.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;quit&gt; block works very similar to a C&lt;CATCH&gt;.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T212144Z" creationid="ramiroencinas" creationdate="20160520T212144Z">
        <seg>El bloque C&lt;quit&gt; es muy similar a C&lt;CATCH&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;react&gt; block is exited when C&lt;done()&gt; is called in one of the taps.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T163700Z" creationid="ramiroencinas" creationdate="20160507T163246Z">
        <seg>La salida del bloque C&lt;react&gt; se realiza llamando a C&lt;done()&gt; en cualquier tap.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;redo&gt; command restarts the loop block without evaluating the
conditional again.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110220T005354Z">
        <seg>El comando C&lt;redo&gt; reinicia la iteración sin evaluar de nuevo la condición.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;tap&gt; method returns a L&lt;Tap&gt; object which can be used to obtain
information about the tap and also to turn it off when we are no longer
interested in the events:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T161241Z" creationid="ramiroencinas" creationdate="20160507T161241Z">
        <seg>El método C&lt;tap&gt; devuelve un objeto L&lt;Tap&gt; que puede utilizarse para obtener información sobre la suscripción (tap) y también cerrarlo cuando no se esté interesado en los eventos que pudieran llegar:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The L&lt;CurrentThreadScheduler&gt; is a very simple scheduler that will always
schedule code to be run straight away on the current thread.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160527T185655Z" creationid="ramiroencinas" creationdate="20160527T185655Z">
        <seg>L&lt;CurrentThreadScheduler&gt; es un programador muy simple que siempre programará la ejecución del código de forma inmediata en el hilo actual.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The L&lt;Supply&gt; can either be C&lt;live&gt; or C&lt;on-demand&gt;.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T154648Z" creationid="ramiroencinas" creationdate="20160507T154648Z">
        <seg>Un L&lt;Suministro&gt; puede ser C&lt;a tiempo real&gt; o C&lt;a demanda&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The L&lt;ThreadPoolScheduler&gt; is the default scheduler, it maintains a pool
of threads that are allocated on demand, creating new ones as necessary up
to maximum number given as a parameter when the scheduler object was created
(the default is 16.)</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160527T185140Z" creationid="ramiroencinas" creationdate="20160527T185140Z">
        <seg>L&lt;ThreadPoolScheduler&gt; es el programador por defecto, mantiene un conjunto de hilos que pueden asignarse a demanda y puede crear hilos nuevos si es necesario hasta un máximo indicado como parámetro al crear el objeto del programador (por defecto son 16 hilos como máximo).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The L&lt;method closed|/type/Channel#method_closed&gt; returns a L&lt;Promise&gt; that
will be kept (and consequently will evaluate to True in a boolean context,)
when the channel is closed.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T100914Z" creationid="ramiroencinas" creationdate="20160521T100914Z">
        <seg>El L&lt;método closed|/type/Channel#method_closed&gt; devuelve una L&lt;Promesa&gt; de forma que cuando ésta finalice (kept) indicará que el canal está cerrado y se evaluará como True.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The L&lt;method in|/type/Promise#method_in&gt; creates a new promise and
schedules a new task to call C&lt;keep&gt; on it no earlier than the supplied
number of seconds, returning the new L&lt;Promise&gt; object.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T173700Z" creationid="ramiroencinas" creationdate="20160502T173402Z">
        <seg>El L&lt;método in|/type/Promise#method_in&gt; crea una promesa nueva y programa una tarea nueva para iniciarla en un número de segundos determinado, devolviendo un nuevo objeto L&lt;Promesa&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The L&lt;method list|/type/Channel#method_list&gt; returns all the items on
the L&lt;Channel&gt; and will block until further items are queued unless the
channel is closed:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T094247Z" creationid="ramiroencinas" creationdate="20160520T205335Z">
        <seg>El L&lt;método list|/type/Channel#method_list&gt; devuelve todos los elementos del L&lt;Canal&gt; y la bloquea hasta que se encolen más elementos a menos que el canal se cierre:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The L&lt;start method|/type/Promise#method_start&gt; provides a shortcut
for that:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T173904Z" creationid="ramiroencinas" creationdate="20160502T173904Z">
        <seg>Para ello se utiliza el L&lt;método start|/type/Promise#method_start&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The actual L&lt;Exception&gt; object will then be available from
C&lt;cause&gt;.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T173058Z" creationid="ramiroencinas" creationdate="20160502T173058Z">
        <seg>El objeto L&lt;Exception&gt; actual queda disponible con C&lt;cause&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The aim of the Perl concurrency design is to provide a high-level,
composable, consistent interface, regardless of how a virtual machine
may implement it for a particular operating system, through layers of
facilities as described below.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160429T190805Z" creationid="ramiroencinas" creationdate="20160429T185635Z">
        <seg>El propósito del diseño de la concurrencia en Perl 6 es proporcionar una interfaz de alto nivel, componible y robusta, independientemente de cómo lo implemente la máquina virtual para un sistema operativo dado, a través de los objetos que veremos a continuación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The behavior here is the same as setting C&lt;done&gt; and C&lt;quit&gt; on C&lt;tap&gt;.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T213547Z" creationid="ramiroencinas" creationdate="20160520T213547Z">
        <seg>El funcionamiento es igual que utilizar C&lt;done&gt; y C&lt;quit&gt; en el C&lt;tap&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class L&lt;Lock&gt; provides the low level mechanism that protects
shared data in a concurrent environment and is thus key to supporting
thread-safety in the high level API, this is sometimes known as a
"Mutex" in other programming languages.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160527T190435Z" creationid="ramiroencinas" creationdate="20160527T190256Z">
        <seg>La clase L&lt;Lock&gt; proporciona un mecanismo de bajo nivel que protege datos compartidos en un entorno concurrente y además es la clave en la seguridad multihilo en la API de alto nivel. Este mecanismo a veces es conocido como "Mutex" en otros lenguajes de programación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The command will not be executed until
L&lt;start|/type/Proc::Async#method_start&gt; is called, which will return
a L&lt;Promise&gt; that will be kept when the program exits.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T171859Z" creationid="ramiroencinas" creationdate="20160523T171859Z">
        <seg>Cuando se realice la llamada a L&lt;start|/type/Proc::Async#method_start&gt; se ejecutará el comando y devolverá una L&lt;Promesa&gt; completada cuando el comando finalice.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The current default global scheduler is available in the variable
C&lt;$*SCHEDULER&gt;.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T200717Z" creationid="ramiroencinas" creationdate="20160523T200717Z">
        <seg>Por ahora, el programador global por defecto está disponible en la variable C&lt;$*SCHEDULER&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The data that is emitted
is an integer starting at 0 that is incremented for each event.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T162906Z" creationid="ramiroencinas" creationdate="20160507T162906Z">
        <seg>El dato que se emite en este caso es un entero que comienza en 0 y se incrementa en cada evento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The implication
is that C&lt;cue&gt; on this scheduler will block until the code finishes
execution, limiting its utility to certain special cases such as testing.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160527T190000Z" creationid="ramiroencinas" creationdate="20160527T190000Z">
        <seg>Las implicaciones de C&lt;cue&gt; en este programador es el bloqueo hasta que finalice la ejecución del código, por lo que su uso se limita de forma especial como en el caso de realizar pruebas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The intent
of the scheduler interface is to provide a mechanism to determine which
resources to use to run a particular task and when to run it.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T195911Z" creationid="ramiroencinas" creationdate="20160523T195911Z">
        <seg>El propósito de la interface del programador es ofrecer un mecanismo que determine los recursos utilizar necesarios para llevar a cabo una tarea en particular y cuando iniciar ésta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The latter behaviour
is illustrated with:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T083603Z" creationid="ramiroencinas" creationdate="20160502T083603Z">
        <seg>Esto lo vamos a ver a continuación:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The lowest level interface for concurrency is provided by L&lt;Thread&gt;.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T173807Z" creationid="ramiroencinas" creationdate="20160523T173807Z">
        <seg>En relación a la concurrencia, la interface de más bajo nivel la proporciona L&lt;Thread&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The majority
of the higher level concurrency APIs are built upon a scheduler and it
may not be necessary for user code to use them at all, although some
methods such as those found in L&lt;Proc::Async&gt;, L&lt;Promise&gt; and L&lt;Supply&gt;
allow you to explicitly supply a scheduler.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T200635Z" creationid="ramiroencinas" creationdate="20160523T200635Z">
        <seg>La mayor parte de las APIs de alto nivel incluidas en la concurrencia se basan en un programador y no tienen por qué ser necesarias en absoluto, si bien algunos métodos como los encontrados en L&lt;Proc::Async&gt;, L&lt;Promise&gt; y L&lt;Supply&gt; te permiten suministrar un programador de forma explícita.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method C&lt;interval&gt; returns a new C&lt;on-demand&gt; supply which periodically
emits a new event at the specified interval.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T162802Z" creationid="ramiroencinas" creationdate="20160507T162802Z">
        <seg>El método C&lt;interval&gt; devuelve un nuevo suministro C&lt;a demanda&gt; que emitirá un evento nuevo con la frecuencia indicada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The methods that return a promise that will be kept or broken
automatically such as C&lt;in&gt; or C&lt;start&gt; will do this, so it is not
necessary to do it for these.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160506T165912Z" creationid="ramiroencinas" creationdate="20160506T165836Z">
        <seg>Los métodos que devuelven una promesa como C&lt;in&gt; o C&lt;start&gt; donde directamente producen la consecución o la excepción de la promesa hacen esto mismo, por lo que no es necesario en esos casos el uso del método L&lt;Vow&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The next level of the concurrency API is supplied by classes that
implement the interface defined by the role L&lt;Scheduler&gt;.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T195650Z" creationid="ramiroencinas" creationdate="20160523T195650Z">
        <seg>El siguiente nivel de la API sobre concurrencia lo ofrecen las clases que implementan la interface definida por el rol L&lt;Scheduler&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The path to the command as well as any arguments to the command are 
supplied to the constructor.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T171654Z" creationid="ramiroencinas" creationdate="20160523T171654Z">
        <seg>Tanto la ubicación del comando como sus parámetros se proporcionan al constructor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The primary interface of a scheduler (indeed the only method required
by the L&lt;Scheduler&gt; interface) is the C&lt;cue&gt; method:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T200856Z" creationid="ramiroencinas" creationdate="20160523T200856Z">
        <seg>La interface principal de un programador (en realidad el único método requerido por la interface L&lt;Scheduler&gt;) es el método C&lt;cue&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The standard
output and standard error of the program are available as L&lt;Supply&gt;
objects from the methods L&lt;stdout|/type/Proc::Async#method_stdout&gt;
and L&lt;stderr|/type/Proc::Async#method_stderr&gt; respectively which can be
tapped as required.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T172411Z" creationid="ramiroencinas" creationdate="20160523T172411Z">
        <seg>La salida estándar y la salida estándar de errores del comando quedarán disponibles en los métodos L&lt;stdout|/type/Proc::Async#method_stdout&gt; y L&lt;stderr|/type/Proc::Async#method_stderr&gt; del objeto L&lt;Promesa&gt; correspondiente. Ambos métodos utilizan a su vez el método tap para acceder a la salida correspondiente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is also the non-blocking L&lt;method poll|/type/Channel#method_poll&gt;
which returns an available item from the channel or L&lt;Nil&gt; if there
is no item or the channel is closed, this does of course mean that the
channel must be checked to determine whether it is closed:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T094545Z" creationid="ramiroencinas" creationdate="20160521T094545Z">
        <seg>Existe el L&lt;method poll|/type/Channel#method_poll&gt; no bloqueante que devuelve un elemento disponible del canal o L&lt;Nil&gt; si no hay elementos o si el canal está cerrado. Esto implica comprobar el estado del canal para ver si está cerrado o no.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20121113T001904Z">
        <seg>Son los siguientes:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This could also be written using the C&lt;react&gt; keyword:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T163028Z" creationid="ramiroencinas" creationdate="20160507T163028Z">
        <seg>Esto mismo también puede escribirse mediante la palabra clave C&lt;react&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This could also be written using the X&lt;C&lt;react&gt;&gt; keyword:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T211410Z" creationid="ramiroencinas" creationdate="20160520T211410Z">
        <seg>Esto puede escribirse mediante la palabra clave X&lt;C&lt;react&gt;&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This could be used, for instance, to fan-out a
L&lt;Supply&gt; to one or more L&lt;Channel&gt;s to provide for different interfaces
in a program.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T102900Z" creationid="ramiroencinas" creationdate="20160521T102755Z">
        <seg>Esto puede utilizarse, por ejemplo, para dirigir los resultados de un L&lt;Suministro&gt; a uno o más L&lt;Canales&gt; para distintos interfaces de un programa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is considered to be such a commonly required pattern that it is
also provided as subroutines:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160503T194136Z" creationid="ramiroencinas" creationdate="20160503T194136Z">
        <seg>El siguiente código es considerado como un patrón común que también es presentado como una subrutina:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will schedule the L&lt;Callable&gt; in C&lt;&amp;code&gt; to be executed in the
manner determined by the adverbs (as documented in L&lt;Scheduler&gt;) using
the execution scheme as implemented by the scheduler.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160527T183015Z" creationid="ramiroencinas" creationdate="20160527T183015Z">
        <seg>Este método ejecutará C&lt;&amp;code&gt; en forma de L&lt;Callable&gt; según determine el resto de parámetros (como indica la documentación de L&lt;Scheduler&gt;) utilizando el esquema de ejecución que implemente el programador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Threads should be considered,
for all intents, largely un-managed and their direct use should be
avoided in user code.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T174706Z" creationid="ramiroencinas" creationdate="20160523T174706Z">
        <seg>A todos los efectos los hilos deben considerarse en gran medida como no administrados y debería evitarse su uso directo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thus</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20121218T185959Z">
        <seg>Por lo tanto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thus,</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20130101T235217Z">
        <seg>Por lo tanto,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>U+0009 CHARACTER TABULATION</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20150629T153052Z" creationid="explorer" creationdate="20150629T153052Z">
        <seg>U+0009 CHARACTER TABULATION</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>U+000A LINE FEED</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20150629T153057Z" creationid="explorer" creationdate="20150629T153057Z">
        <seg>U+000A LINE FEED</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>U+0020 SPACE</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20150629T153121Z" creationid="explorer" creationdate="20150629T153121Z">
        <seg>U+0020 SPACE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>U+0085 NEXT LINE</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20150123T142439Z" creationid="explorer" creationdate="20150123T142439Z">
        <seg>U+0085 NEXT LINE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>U+2029 PARAGRAPH SEPARATOR</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20150123T142508Z" creationid="explorer" creationdate="20150123T142508Z">
        <seg>U+2029 PARAGRAPH SEPARATOR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unlike C&lt;await&gt; however the results of the original kept promises are not
available without referring to the original, so these are more useful
when the completion or otherwise of the tasks is more important to the
consumer than the actual results, or when the results have been collected
by other means.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T211341Z" creationid="ramiroencinas" creationdate="20160520T211341Z">
        <seg>Sin embargo, con C&lt;await&gt; es necesario hacer referencia a las promesas originales que han finalizado para obtener sus resultados. Este caso es más util, por ejemplo, cuando es más importante averiguar si las promesas han finalizado que la obtención de sus resultados, o cuando los resultados se obtienen por otros medios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unlike C&lt;await&gt; however the results of the original kept promises are not
available without referring to the original, so these are more useful
when the completion or otherwise of the tasks is more important to the
consumer than the actual results, or when the results have been collected 
by other means.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160506T160447Z" creationid="ramiroencinas" creationdate="20160503T204036Z">
        <seg>Sin embargo, al utilizar C&lt;await&gt; de esta manera, los resultados de las dos promesas solo estarán disponibles al hacer referencia a la promesa original. Esto está bien cuando la consecución o no de las tareas es más importante que los resultados, o cuando los resultados vienen de otro lugar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Which will give True if all of the promises were kept with True, False
otherwise.</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160506T161908Z" creationid="ramiroencinas" creationdate="20160506T161810Z">
        <seg>De forma que devolverá True si todas las promesas del array finalizan sin excepciones, o False en caso contrario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may, for example, want to create a dependent Promise
that will examine each of the original promises:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160506T161831Z" creationid="ramiroencinas" creationdate="20160506T161444Z">
        <seg>Por ejemplo, puedes crear una promesa que compruebe la consecución o no de una serie de promesas alojadas en un array:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T170745Z">
        <seg>a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>await $p;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T101410Z" creationid="ramiroencinas" creationdate="20160521T101410Z">
        <seg>await $p;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>await $promise;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160503T201717Z" creationid="ramiroencinas" creationdate="20160503T201717Z">
        <seg>await $promesa;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>await (^10).map: -&gt; $r {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T205410Z" creationid="ramiroencinas" creationdate="20160520T205410Z">
        <seg>await (^10).map: -&gt; $r {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>b</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20121218T200744Z">
        <seg>b</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>close $fh;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T095311Z">
        <seg>close $fh;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>continue {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110717T234603Z">
        <seg>continue {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>default {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T092945Z">
        <seg>default {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>do {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T080313Z">
        <seg>do {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>doit();</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20120405T230518Z">
        <seg>hazlo();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>done =&gt; { say 'Job is done.' },</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T212048Z" creationid="ramiroencinas" creationdate="20160520T212048Z">
        <seg>done =&gt; { say 'Trabajo finalizado.' },</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>done() if $v == 4;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204224Z" creationid="ramiroencinas" creationdate="20160520T204224Z">
        <seg>done() if $v == 4;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>else {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110717T234601Z">
        <seg>else {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>elsif $closed {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T094628Z" creationid="ramiroencinas" creationdate="20160521T094628Z">
        <seg>elsif $cerrado {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>emit($_);</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204207Z" creationid="ramiroencinas" creationdate="20160520T204207Z">
        <seg>emit($_);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>foo</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>foo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for $channel.list -&gt; $r {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T205448Z" creationid="ramiroencinas" creationdate="20160520T205448Z">
        <seg>for $canal.list -&gt; $r {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for 0 ..</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204229Z" creationid="ramiroencinas" creationdate="20160520T204229Z">
        <seg>for 0 ..</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for 1 ..</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T203433Z" creationid="ramiroencinas" creationdate="20160520T203433Z">
        <seg>for 1 ..</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for 1..5 -&gt; $t {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204153Z" creationid="ramiroencinas" creationdate="20160520T204153Z">
        <seg>for 1..5 -&gt; $t {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>hello</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20121231T093844Z">
        <seg>hola</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>hyper-operators, autothreading junctions?</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T203919Z" creationid="ramiroencinas" creationdate="20160520T203919Z">
        <seg>hyper-operators, autothreading junctions?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if $c.poll -&gt; $item {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T094613Z" creationid="ramiroencinas" creationdate="20160521T094613Z">
        <seg>if $c.poll -&gt; $elemento {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if ($xyz) { print "$xyz\n" }</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110718T233954Z">
        <seg>if ($xyz) { print "$xyz\n" }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>is equivalent to</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20120630T173216Z">
        <seg>es equivalente a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>last;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T100629Z" creationid="ramiroencinas" creationdate="20160521T100629Z">
        <seg>last;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>loop {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T100626Z" creationid="ramiroencinas" creationdate="20160521T100626Z">
        <seg>loop {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>method cue(:&amp;code, Instant :$at, :$in, :$every, :$times = 1; :&amp;catch)</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T200912Z" creationid="ramiroencinas" creationdate="20160523T200912Z">
        <seg>method cue(:&amp;code, Instant :$at, :$in, :$every, :$times = 1; :&amp;catch)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $answer = 42;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110129T230806Z">
        <seg>my $respuesta = 42;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $c = Channel.new;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T094550Z" creationid="ramiroencinas" creationdate="20160521T094550Z">
        <seg>my $c = Channel.new;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $c = Date.new('2012-12-24');</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20160428T181853Z" creationid="explorer" creationdate="20160428T181853Z">
        <seg>my $c = Date.new('2012-12-24');</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $cancellation = $*SCHEDULER.cue({ say $i++}, every =&gt; 2 );</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160527T183032Z" creationid="ramiroencinas" creationdate="20160527T183032Z">
        <seg>my $cancelación = $*SCHEDULER.cue({ say $i++}, every =&gt; 2 );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $channel = $supply.Channel;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T102037Z" creationid="ramiroencinas" creationdate="20160521T102037Z">
        <seg>my $canal = $suministro.Channel;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $channel = Channel.new;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204318Z" creationid="ramiroencinas" creationdate="20160520T204231Z">
        <seg>my $canal = Channel.new;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $closed = $c.closed;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T094558Z" creationid="ramiroencinas" creationdate="20160521T094558Z">
        <seg>my $cerrado = $c.closed;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $count = 0;</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>my $cuenta = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $even_supply = $supply.grep({ not $_ % 2 });</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="Ram" changedate="20160508T172401Z" creationid="Ram" creationdate="20160508T172401Z">
        <seg>my $suministro_par = $suministro.grep({ not $_ % 2 });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $half_supply = $supply.map({ $_ / 2 });</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160519T184029Z" creationid="ramiroencinas" creationdate="20160519T184029Z">
        <seg>my $medio_suministro = $supply.map({ $_ / 2 });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $i = 0;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T161138Z">
        <seg>my $i = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $odd_supply = $supply.grep({ $_ % 2 });</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="Ram" changedate="20160508T172322Z" creationid="Ram" creationdate="20160508T172322Z">
        <seg>my $suministro_impar = $suministro.grep({ $_ % 2 });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $p = start {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T101354Z" creationid="ramiroencinas" creationdate="20160521T101354Z">
        <seg>my $p = start {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $p1 = start {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T203953Z" creationid="ramiroencinas" creationdate="20160520T203953Z">
        <seg>my $p1 = start {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $p2 = Promise.new;
$p2.break('oh no');
say $p2.status;         # Broken
say $p2.result;         # dies with "oh no"
=end code</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160429T202308Z" creationid="ramiroencinas" creationdate="20160429T202308Z">
        <seg>my $p2 = Promise.new;
$p2.break('oh no');
say $p2.status;         # Rotura
say $p2.result;         # muere con "oh no"
=end code</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $p2 = start {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T203957Z" creationid="ramiroencinas" creationdate="20160520T203957Z">
        <seg>my $p2 = start {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $proc = Proc::Async.new('echo', 'foo', 'bar');</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T103229Z" creationid="ramiroencinas" creationdate="20160521T103229Z">
        <seg>my $proc = Proc::Async.new('echo', 'foo', 'bar');</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $proc = Proc::Async.new(:w, 'grep', 'foo');</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T172859Z" creationid="ramiroencinas" creationdate="20160523T172859Z">
        <seg>my $proc = Proc::Async.new(:w, 'grep', 'foo');</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $promise = $proc.start;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T103259Z" creationid="ramiroencinas" creationdate="20160521T103259Z">
        <seg>my $promesa = $proc.start;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $promise = Promise.allof(</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160503T201707Z" creationid="ramiroencinas" creationdate="20160503T201707Z">
        <seg>my $promesa = Promise.allof(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $promise = Promise.anyof(</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160503T202101Z" creationid="ramiroencinas" creationdate="20160503T202101Z">
        <seg>my $promesa = Promise.anyof(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $promise = Promise.new;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160506T165247Z" creationid="ramiroencinas" creationdate="20160506T165247Z">
        <seg>my $promesa = Promise.new;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $promise = Promise.start(</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T173912Z" creationid="ramiroencinas" creationdate="20160502T173912Z">
        <seg>my $promesa = Promise.start(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $promise = Promise.start({ die "Broken Promise" });</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160503T193629Z" creationid="ramiroencinas" creationdate="20160503T193629Z">
        <seg>my $promesa = Promise.start({ die "Promesa Rota" });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $promise = get_promise();</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160506T165314Z" creationid="ramiroencinas" creationdate="20160506T165314Z">
        <seg>my $promesa = get_promesa();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $promise = start {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160503T194142Z" creationid="ramiroencinas" creationdate="20160503T194142Z">
        <seg>my $promesa = start {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $promise1 = Promise.in(5);</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T173245Z" creationid="ramiroencinas" creationdate="20160502T173245Z">
        <seg>my $promesa1 = Promise.in(5);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $promise1 = Promise.new();</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160429T202718Z" creationid="ramiroencinas" creationdate="20160429T202718Z">
        <seg>my $promesa1 = Promise.new();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $promise2 = $promise1.then(</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160429T202733Z" creationid="ramiroencinas" creationdate="20160429T202733Z">
        <seg>my $promesa2 = $promesa2.then(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $promise2 = $promise1.then(-&gt; $v { say "Handled but : "; say $v.result});</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T083714Z" creationid="ramiroencinas" creationdate="20160502T083714Z">
        <seg>my $promesa2 = $promesa1.then(-&gt; $v { say "Handled but : "; say $v.result});</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $promise2 = $promise1.then(-&gt; $v { say $v.status; 'Second Result' });</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T173305Z" creationid="ramiroencinas" creationdate="20160502T173305Z">
        <seg>my $promesa2 = $promesa1.then(-&gt; $v { say $v.status; 'Segundo Resultado' });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $result = await $promise;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160503T194212Z" creationid="ramiroencinas" creationdate="20160503T194212Z">
        <seg>my $resultado = await $promesa;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $supplier = Supplier.new;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T155936Z" creationid="ramiroencinas" creationdate="20160507T155936Z">
        <seg>my $proveedor = Supplier.new;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $supply   = $supplier.Supply;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T155954Z" creationid="ramiroencinas" creationdate="20160507T155954Z">
        <seg>my $suministro   = $proveedor.Supply;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $supply = $supplier.Supply;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="Ram" changedate="20160508T172235Z" creationid="Ram" creationdate="20160508T172235Z">
        <seg>my $suministro = $proveedor.Supply;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $supply = Supply.interval(2);</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T162951Z" creationid="ramiroencinas" creationdate="20160507T162951Z">
        <seg>my $suministro = Supply.interval(2);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $supply = supply {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T160548Z" creationid="ramiroencinas" creationdate="20160507T160548Z">
        <seg>my $suministro = supply {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $tap = $supply.tap( -&gt; $v { say $v });</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160507T161255Z" creationid="ramiroencinas" creationdate="20160507T161255Z">
        <seg>my $tap = $suministro.tap( -&gt; $v { say $v });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $thread = Thread.new(code =&gt; { for  1 ..</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T174808Z" creationid="ramiroencinas" creationdate="20160523T174808Z">
        <seg>my $hilo = Thread.new(code =&gt; { for  1 ..</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $thread = Thread.start({ for  1 ..</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160523T174851Z" creationid="ramiroencinas" creationdate="20160523T174851Z">
        <seg>my $hilo = Thread.start({ for  1 ..</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $vow = $promise.vow;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160506T165254Z" creationid="ramiroencinas" creationdate="20160506T165254Z">
        <seg>my $vow = $promesa.vow;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $x = 10;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20151203T063718Z" creationid="explorer" creationdate="20151203T063718Z">
        <seg>my $x = 10;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $x;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20151221T054737Z" creationid="explorer" creationdate="20151221T054737Z">
        <seg>my $x;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my ($fh) = @_;</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>my ($fh) = @_;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my @a = ();</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20110918T014903Z">
        <seg>my @a = ();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my @a;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110717T232915Z">
        <seg>my @a;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my @data;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20160320T151325Z" creationid="explorer" creationdate="20160320T151303Z">
        <seg>my @datos;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my @promises;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160506T161452Z" creationid="ramiroencinas" creationdate="20160506T161452Z">
        <seg>my @promesas;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my @result = await $p1, $p2;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160503T194547Z" creationid="ramiroencinas" creationdate="20160503T194547Z">
        <seg>my @resultado = await $p1, $p2;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>or</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110608T173604Z">
        <seg>o bien</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>outputs</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20121230T124005Z">
        <seg>produce como salida:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package Foo;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20111008T175308Z">
        <seg>package Foo;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlsyn - Perl syntax</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110220T002046Z">
        <seg>perlsyn - Sintaxis de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>prints</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20121218T200729Z">
        <seg>imprime</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>produces</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20151126T065344Z" creationid="explorer" creationdate="20151126T065344Z">
        <seg>produce</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>push @promises, start {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160506T161500Z" creationid="ramiroencinas" creationdate="20160506T161500Z">
        <seg>push @promesas, start {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>quit =&gt; {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T212053Z" creationid="ramiroencinas" creationdate="20160520T212053Z">
        <seg>quit =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>react  {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T102046Z" creationid="ramiroencinas" creationdate="20160521T102046Z">
        <seg>react  {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>react {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="Ram" changedate="20160508T171119Z" creationid="Ram" creationdate="20160508T171119Z">
        <seg>react {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say "All done"; # Should be about 3 seconds later</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160503T202406Z" creationid="ramiroencinas" creationdate="20160503T202406Z">
        <seg>say "Todo listo"; # Debería tardar unos 3 segundos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say "All done"; # Should be not much more than three seconds later</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160503T202333Z" creationid="ramiroencinas" creationdate="20160503T201911Z">
        <seg>say "Todo listo"; # No debería tardar más de tres segundos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say "Done.";</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T103305Z" creationid="ramiroencinas" creationdate="20160521T103305Z">
        <seg>say "Realizado.";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say "Starting...";</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T103253Z" creationid="ramiroencinas" creationdate="20160521T103253Z">
        <seg>say "Iniciando...";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say "via Channel: $item";</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T102443Z" creationid="ramiroencinas" creationdate="20160521T102111Z">
        <seg>say "vía Canal: $elemento";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say $_;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T101408Z" creationid="ramiroencinas" creationdate="20160521T101408Z">
        <seg>say $_;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say $channel.receive;  # 'Channel One'</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204403Z" creationid="ramiroencinas" creationdate="20160520T204236Z">
        <seg>say $canal.receive;  # 'Canal Uno'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say $item;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T094618Z" creationid="ramiroencinas" creationdate="20160521T094618Z">
        <seg>say $elemento;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say $promise.cause;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160503T193820Z" creationid="ramiroencinas" creationdate="20160503T193820Z">
        <seg>say $promesa.cause;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say $promise.result;    # 55</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T173924Z" creationid="ramiroencinas" creationdate="20160502T173924Z">
        <seg>say $promesa.result;    # 55</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say $promise2.cause;        # Handled but : \n First Result</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T170702Z" creationid="ramiroencinas" creationdate="20160502T170702Z">
        <seg>say $promesa2.cause;        # Controlado pero : \n Primer Resultado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say $promise2.result;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T173312Z" creationid="ramiroencinas" creationdate="20160502T173312Z">
        <seg>say $promesa2.result;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say $promise2.result;   # First Result \n Second Result</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160429T203026Z" creationid="ramiroencinas" creationdate="20160429T203026Z">
        <seg>say $promesa2.result;   # Primer Resultado \n Segundo Resultado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say $r;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T210009Z" creationid="ramiroencinas" creationdate="20160520T210009Z">
        <seg>say $r;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say $result;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160503T194218Z" creationid="ramiroencinas" creationdate="20160503T194218Z">
        <seg>say $resultado;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say $v;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204222Z" creationid="ramiroencinas" creationdate="20160520T204222Z">
        <seg>say $v;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say @result;            # 55 -55</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160503T194554Z" creationid="ramiroencinas" creationdate="20160503T194554Z">
        <seg>say @resultado;            # 55 -55</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say await Promise.allof(@promises).then({ so all(@promises&gt;&gt;.result) });</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160506T161526Z" creationid="ramiroencinas" creationdate="20160506T161526Z">
        <seg>say await Promise.allof(@promesas).then({ so all(@promesas&gt;&gt;.result) });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>should only output 0 to 5,</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160527T183811Z" creationid="ramiroencinas" creationdate="20160527T183811Z">
        <seg>debería visualizar solo de 0 a 5,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sleep $r;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T205415Z" creationid="ramiroencinas" creationdate="20160520T205415Z">
        <seg>sleep $r;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sleep $t;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204155Z" creationid="ramiroencinas" creationdate="20160520T204155Z">
        <seg>sleep $t;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sleep 10;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204217Z" creationid="ramiroencinas" creationdate="20160520T204217Z">
        <seg>sleep 10;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sleep 1;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T161338Z">
        <seg>sleep 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sleep 20;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160527T190259Z" creationid="ramiroencinas" creationdate="20160527T190259Z">
        <seg>sleep 20;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sleep 6;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T203802Z" creationid="ramiroencinas" creationdate="20160520T203802Z">
        <seg>sleep 6;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>start {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T205412Z" creationid="ramiroencinas" creationdate="20160520T205412Z">
        <seg>start {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub get_promise {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160506T165242Z" creationid="ramiroencinas" creationdate="20160506T165242Z">
        <seg>sub get_promesa {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>try $promise.result;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160503T193810Z" creationid="ramiroencinas" creationdate="20160503T193810Z">
        <seg>try $promesa.result;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>try $promise2.result;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160502T170640Z" creationid="ramiroencinas" creationdate="20160502T170640Z">
        <seg>try $promesa2.result;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>try {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20151218T061256Z" creationid="explorer" creationdate="20151218T061256Z">
        <seg>try {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use 5.010;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T161307Z">
        <seg>use 5.010;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use Data::Dumper;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T080011Z">
        <seg>use Data::Dumper;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use Getopt::Long;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20111105T004229Z">
        <seg>use Getopt::Long;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use Moose;</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20120625T193814Z">
        <seg>use Moose;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>when X::MyApp::Error { say "App Error: ", $_.message }</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T212117Z" creationid="ramiroencinas" creationdate="20160520T212117Z">
        <seg>when X::MyApp::Error { say "Error: ", $_.message }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>whenever $channel -&gt; $item {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T102058Z" creationid="ramiroencinas" creationdate="20160521T102058Z">
        <seg>whenever $canal -&gt; $elemento {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>whenever $channel {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160521T101403Z" creationid="ramiroencinas" creationdate="20160521T101403Z">
        <seg>whenever $canal {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>whenever $supply {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T213325Z" creationid="ramiroencinas" creationdate="20160520T213325Z">
        <seg>whenever $suministro {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>whenever Supply.from-list(1..10) -&gt; $v {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204227Z" creationid="ramiroencinas" creationdate="20160520T204227Z">
        <seg>whenever Supply.from-list(1..10) -&gt; $v {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>whenever Supply.interval(2) -&gt; $v {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T204219Z" creationid="ramiroencinas" creationdate="20160520T204219Z">
        <seg>whenever Supply.interval(2) -&gt; $v {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>which is equivalent to</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20111203T180244Z">
        <seg>que es equivalente a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>which prints</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="explorer" changedate="20151117T071114Z" creationid="explorer" creationdate="20151117T071114Z">
        <seg>que imprime</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>which produces:</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20121218T200455Z">
        <seg>que produce:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{</seg>
      </tuv>
      <tuv lang="ES-ES">
        <seg>{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{ my $i = 0; for 1 ..</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="ramiroencinas" changedate="20160520T203338Z" creationid="ramiroencinas" creationdate="20160520T203338Z">
        <seg>{ my $i = 0; for 1 ..</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110608T171333Z">
        <seg>}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>} else {</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110608T180419Z">
        <seg>} else {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>});</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110719T080041Z">
        <seg>});</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>},</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110608T172814Z">
        <seg>},</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>};</seg>
      </tuv>
      <tuv lang="ES-ES" changeid="zipf" changedate="20110608T180410Z">
        <seg>};</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
  </body>
</tmx>
